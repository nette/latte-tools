Test: "autoescape" tag does not apply escaping on literals



1. Simple literal
{='<br />'}

2. Conditional expression with only literals
{=true ? '<br />' : '<br>'}

3. Conditional expression with a variable
{=true ? '<br />' : $someVar}
{=false ? '<br />' : $someVar}
{=true ? $someVar : '<br />'}
{=false ? $someVar : '<br />'}

4. Nested conditionals with only literals
{=true ? true ? '<br />' : '<br>' : "\n"}

5. Nested conditionals with a variable
{=true ? true ? '<br />' : $someVar : "\n"}
{=true ? false ? '<br />' : $someVar : "\n"}
{=true ? true ? $someVar : '<br />' : "\n"}
{=true ? false ? $someVar : '<br />' : "\n"}
{=false ? "\n" : true ? $someVar : '<br />'}
{=false ? "\n" : false ? $someVar : '<br />'}

6. Nested conditionals with a variable marked safe
{=true ? true ? '<br />' : ($someVar|noescape) : "\n"}
{=true ? false ? '<br />' : ($someVar|noescape) : "\n"}
{=true ? true ? ($someVar|noescape) : '<br />' : "\n"}
{=true ? false ? ($someVar|noescape) : '<br />' : "\n"}
{=false ? "\n" : true ? ($someVar|noescape) : '<br />'}
{=false ? "\n" : false ? ($someVar|noescape) : '<br />'}

7. Without then clause
{='<br />' ? '<br />' : $someVar}
{$someFalseVar ? $someFalseVar : '<br />'}

8. NullCoalesce
{$aaaa ?? '<br />'}
{='<br />' ?? $someVar}


