Test: Twig supports array notation

{* empty array *}
{=[]|join:','}

{=[1, 2]|join:','}
{=[foo, bar]|join:','}
{=[1, foo => bar]|join:','}
{array_keys([1, foo => bar])|join:','}

{=[1, foo => bar]|join:','}
{array_keys([1, foo => bar])|join:','}

{* nested arrays *}
{var $a = [1, 2, [1, 2], [foo => [foo => bar]]]}
{$a[2]|join:','}
{$a[3]->foo|join:','}

{* works even if [] is used inside the array *}
{=[$foo->{$bar}]|join:','}

{* elements can be any expression *}
{=[(foo|upper), ($bar|upper), ($bar == $foo)]|join:','}

{* arrays can have a trailing , like in PHP *}
{=[1, 2]|join:','}

{* keys can be any expression *}
{var $a = 1}
{var $b = foo}
{var $ary = [$a => a, $b => b, c => c, ($a . $b) => d]}
{array_keys($ary)|join:','}
{$ary|join:','}

{* ArrayAccess *}
{$array_access->a}

{* array that does not exist *}
{$does_not_exist[0] ?? ok}
{$does_not_exist[0]->does_not_exist_either ?? ok}
{$does_not_exist[0]->does_not_exist_either ?? ok}
